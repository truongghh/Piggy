local Players = game:GetService("Players")
local Lighting = game:GetService("Lighting")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local LocalPlayer = Players.LocalPlayer

-- üñºÔ∏è GUI ch√≠nh
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "MobileGUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = game.CoreGui

-- üîò N√∫t b·∫≠t/t·∫Øt GUI
local ToggleBtn = Instance.new("TextButton")
ToggleBtn.Size = UDim2.new(0, 50, 0, 50)
ToggleBtn.Position = UDim2.new(0.02, 0, 0.4, 0)
ToggleBtn.Text = "‚â°"
ToggleBtn.TextScaled = true
ToggleBtn.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
ToggleBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleBtn.BackgroundTransparency = 0.2
ToggleBtn.BorderSizePixel = 0
ToggleBtn.Parent = ScreenGui
ToggleBtn.AutoButtonColor = true
ToggleBtn.Active = true
ToggleBtn.Draggable = true

-- üì¶ Frame ch√≠nh
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 200, 0, 300)
MainFrame.Position = UDim2.new(0.08, 0, 0.3, 0)
MainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
MainFrame.BackgroundTransparency = 0.2
MainFrame.BorderSizePixel = 0
MainFrame.Visible = true
MainFrame.Active = true
MainFrame.Draggable = true
MainFrame.Parent = ScreenGui

-- üåü Vi·ªÅn tr·∫Øng ch·∫°y quanh GUI
local Border = Instance.new("UIStroke")
Border.Parent = MainFrame
Border.Thickness = 2
Border.Color = Color3.fromRGB(255, 255, 255)
Border.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
Border.Transparency = 0

local UIGradient = Instance.new("UIGradient")
UIGradient.Parent = Border
UIGradient.Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)),
	ColorSequenceKeypoint.new(0.5, Color3.fromRGB(100, 100, 100)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 255, 255))
}
UIGradient.Rotation = 0

task.spawn(function()
	while task.wait(0.03) do
		UIGradient.Rotation = (UIGradient.Rotation + 2) % 360
	end
end)

-- üåü Ti√™u ƒë·ªÅ
local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, 0, 0, 40)
Title.BackgroundTransparency = 1
Title.Text = "üìå MENU"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.Font = Enum.Font.SourceSansBold
Title.TextScaled = true
Title.Parent = MainFrame

-- üõ†Ô∏è Danh s√°ch n√∫t
local ButtonNames = {"FullBright", "NoClip", "Speed x2", "Get Item", "ESP Player"}
local Buttons = {}

for i, name in ipairs(ButtonNames) do
	local Btn = Instance.new("TextButton")
	Btn.Size = UDim2.new(0.9, 0, 0, 40)
	Btn.Position = UDim2.new(0.05, 0, 0, (i * 45))
	Btn.Text = name
	Btn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	Btn.TextColor3 = Color3.fromRGB(255, 255, 255)
	Btn.Font = Enum.Font.SourceSansBold
	Btn.TextScaled = true
	Btn.BorderSizePixel = 0
	Btn.Parent = MainFrame
	Buttons[name] = Btn

	-- Hi·ªáu ·ª©ng hover
	Btn.MouseEnter:Connect(function()
		Btn.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
	end)
	Btn.MouseLeave:Connect(function()
		Btn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	end)
end

-- =========================
-- üéõÔ∏è Toggle Menu
ToggleBtn.MouseButton1Click:Connect(function()
	MainFrame.Visible = not MainFrame.Visible
end)

-- =========================
-- üåü FULLBRIGHT
_G.FullBrightExecuted = _G.FullBrightExecuted or false
_G.FullBrightEnabled = _G.FullBrightEnabled or false

if not _G.FullBrightExecuted then
	_G.NormalLightingSettings = {
		Brightness = Lighting.Brightness,
		ClockTime = Lighting.ClockTime,
		FogEnd = Lighting.FogEnd,
		GlobalShadows = Lighting.GlobalShadows,
		Ambient = Lighting.Ambient
	}
	_G.FullBrightExecuted = true
end

local function SetFullBright(enable)
	if enable then
		Lighting.Brightness = 1
		Lighting.ClockTime = 12
		Lighting.FogEnd = 786543
		Lighting.GlobalShadows = false
		Lighting.Ambient = Color3.fromRGB(178, 178, 178)
	else
		Lighting.Brightness = _G.NormalLightingSettings.Brightness
		Lighting.ClockTime = _G.NormalLightingSettings.ClockTime
		Lighting.FogEnd = _G.NormalLightingSettings.FogEnd
		Lighting.GlobalShadows = _G.NormalLightingSettings.GlobalShadows
		Lighting.Ambient = _G.NormalLightingSettings.Ambient
	end
end

Buttons["FullBright"].MouseButton1Click:Connect(function()
	_G.FullBrightEnabled = not _G.FullBrightEnabled
	SetFullBright(_G.FullBrightEnabled)
	Buttons["FullBright"].Text = _G.FullBrightEnabled and "FullBright ‚úÖ" or "FullBright ‚ùå"
end)

-- =========================
-- üö´ NOCLIP
local NoClipEnabled = false
local NoClipConnection

local function SetNoClip(enable)
	if enable and not NoClipConnection then
		NoClipConnection = RunService.Stepped:Connect(function()
			if LocalPlayer.Character then
				for _, part in pairs(LocalPlayer.Character:GetChildren()) do
					if part:IsA("BasePart") then
						part.CanCollide = false
					end
				end
			end
		end)
	elseif not enable and NoClipConnection then
		NoClipConnection:Disconnect()
		NoClipConnection = nil
	end
end

Buttons["NoClip"].MouseButton1Click:Connect(function()
	NoClipEnabled = not NoClipEnabled
	SetNoClip(NoClipEnabled)
	Buttons["NoClip"].Text = NoClipEnabled and "NoClip ‚úÖ" or "NoClip ‚ùå"
end)

-- =========================
-- üèÉ SPEED X2
local SpeedEnabled = false
local DefaultSpeed = 16

Buttons["Speed x2"].MouseButton1Click:Connect(function()
	if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
		SpeedEnabled = not SpeedEnabled
		local humanoid = LocalPlayer.Character:FindFirstChild("Humanoid")
		if SpeedEnabled then
			DefaultSpeed = humanoid.WalkSpeed
			humanoid.WalkSpeed = 32
			Buttons["Speed x2"].Text = "Speed x2 ‚úÖ"
		else
			humanoid.WalkSpeed = DefaultSpeed
			Buttons["Speed x2"].Text = "Speed x2 ‚ùå"
		end
	end
end)

-- =========================
-- üéí GET ITEM (KH√îNG CH·ªàNH S·ª¨A, GI·ªÆ NGUY√äN CODE B·∫†N G·ª¨I)
Buttons["Get Item"].MouseButton1Click:Connect(function()
	loadstring([[
-- üìå GUI ch√≠nh
local PiggyGui = Instance.new("ScreenGui")
PiggyGui.Name = "PiggyGui"
PiggyGui.Parent = game.CoreGui

-- üìå N√∫t B·∫≠t/T·∫Øt GUI
local ToggleButton = Instance.new("TextButton")
ToggleButton.Name = "ToggleButton"
ToggleButton.Parent = PiggyGui
ToggleButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.TextScaled = true
ToggleButton.Text = "üìÇ OPEN GUI"
ToggleButton.Size = UDim2.new(0, 100, 0, 40)
ToggleButton.Position = UDim2.new(0.02, 0, 0.35, 0)
ToggleButton.Visible = true

-- üìå Hi·ªáu ·ª©ng ƒë·ªïi m√†u vi·ªÅn b·∫£y m√†u ch·∫°y
local UIStroke = Instance.new("UIStroke")
UIStroke.Thickness = 2
UIStroke.Parent = ToggleButton
spawn(function()
    while task.wait() do
        for i = 0, 1, 0.01 do
            UIStroke.Color = Color3.fromHSV(i, 1, 1)
            task.wait(0.02)
        end
    end
end)

-- üìå Cho ph√©p k√©o th·∫£ n√∫t
local UserInputService = game:GetService("UserInputService")
local dragging = false
local dragStart, startPos

ToggleButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = ToggleButton.Position
    end
end)

ToggleButton.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseMovement) then
        local delta = input.Position - dragStart
        ToggleButton.Position = UDim2.new(
            startPos.X.Scale, startPos.X.Offset + delta.X,
            startPos.Y.Scale, startPos.Y.Offset + delta.Y
        )
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

-- üìå Khung ch·ª©a item
local ScrollingFrame = Instance.new("ScrollingFrame", PiggyGui)
ScrollingFrame.BackgroundColor3 = Color3.new(0.15, 0.15, 0.15)
ScrollingFrame.Position = UDim2.new(0.08, 0, 0.42, 0)
ScrollingFrame.Size = UDim2.new(0, 296, 0, 388)
ScrollingFrame.Visible = false -- ·∫®n m·∫∑c ƒë·ªãnh

local UIGridLayout = Instance.new("UIGridLayout", ScrollingFrame)
UIGridLayout.CellSize = UDim2.new(0,90,0,90)

-- ‚úÖ Ch·ª©c nƒÉng b·∫≠t/t·∫Øt GUI + ƒë·ªïi ch·ªØ ƒë·ªông
local GuiEnabled = false
ToggleButton.MouseButton1Click:Connect(function()
    GuiEnabled = not GuiEnabled
    ScrollingFrame.Visible = GuiEnabled
    if GuiEnabled then
        ToggleButton.Text = "üìÇ CLOSE GUI"
    else
        ToggleButton.Text = "üìÇ OPEN GUI"
    end
end)

-- üìå V√≤ng l·∫∑p c·∫≠p nh·∫≠t item
while task.wait(1) do
    local a = workspace:GetDescendants()
    local items = {}
    local itemframes = ScrollingFrame:GetChildren()
    for i=1,#itemframes do
        if itemframes[i].ClassName == "TextButton" then
            itemframes[i]:Destroy()
        end
    end
    for i=1,#a do
        if a[i].Name == "ItemPickupScript" and a[i].Parent:FindFirstChild("ClickDetector") then
            table.insert(items, a[i].Parent)
        end
    end
    for i=1,#items do
        local ItemFrame = Instance.new("TextButton", ScrollingFrame)
        ItemFrame.Name = "ItemFrame"
        ItemFrame.BackgroundColor3 = Color3.new(1, 1, 1)
        ItemFrame.BackgroundTransparency = 0.95
        ItemFrame.Size = UDim2.new(0, 100, 0, 100)
        ItemFrame.Text = ""
        local View = Instance.new("ViewportFrame", ItemFrame)
        View.Name = "View"
        View.Size = UDim2.new(1,0,1,0)
        View.BackgroundTransparency = 1
        View.BorderSizePixel = 0
        local object = items[i]
        local viewportclone = object:Clone()
        viewportclone.Parent = View
        local cam = Instance.new("Camera", viewportclone)
        cam.CameraType = Enum.CameraType.Fixed
        local objectPosition = object.Position
        local cameraPosition = objectPosition + Vector3.new(0,3,0)
        cam.CoordinateFrame = CFrame.new(cameraPosition, objectPosition)
        View.CurrentCamera = cam

        ItemFrame.MouseButton1Down:Connect(function()
            if items[i]:FindFirstChild("ClickDetector") then
                local cpos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
                task.wait(0.05)
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = items[i].CFrame
                task.wait(0.1)
                fireclickdetector(items[i].ClickDetector)
                task.wait(0.3)
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cpos
            end
        end)
    end
end
   ]])()
end)

-- =========================
-- üëÄ ESP PLAYER
local ESP_Enabled = false

Buttons["ESP Player"].MouseButton1Click:Connect(function()
	ESP_Enabled = not ESP_Enabled
	Buttons["ESP Player"].Text = ESP_Enabled and "ESP Player ‚úÖ" or "ESP Player ‚ùå"
	if ESP_Enabled then
		_G.FriendColor = Color3.fromRGB(0, 0, 255)
		_G.EnemyColor = Color3.fromRGB(255, 0, 0)
		_G.UseTeamColor = true

		local function RainbowColor(timeOffset)
			local t = tick() + timeOffset
			local r = math.sin(t) * 0.5 + 0.5
			local g = math.sin(t + 2) * 0.5 + 0.5
			local b = math.sin(t + 4) * 0.5 + 0.5
			return Color3.new(r, g, b)
		end

		local function esp(target, color)
			if target.Character then
				if not target.Character:FindFirstChild("ESP_Highlight") then
					local highlight = Instance.new("Highlight")
					highlight.Name = "ESP_Highlight"
					highlight.Adornee = target.Character
					highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
					highlight.FillColor = color
					highlight.Parent = target.Character
				else
					target.Character.ESP_Highlight.FillColor = color
				end
			end
		end

		task.spawn(function()
			while ESP_Enabled and task.wait() do
				for i,v in pairs(Players:GetPlayers()) do
					if v ~= LocalPlayer then
						local color = _G.UseTeamColor and v.TeamColor.Color or ((LocalPlayer.TeamColor == v.TeamColor) and _G.FriendColor or _G.EnemyColor)
						esp(v, color)

						if v.Character and v.Character:FindFirstChild("Head") then
							local nameTag = v.Character:FindFirstChild("ESP_Tag")
							if not nameTag then
								local billboard = Instance.new("BillboardGui", v.Character.Head)
								billboard.Name = "ESP_Tag"
								billboard.Size = UDim2.new(0,200,0,50)
								billboard.AlwaysOnTop = true
								local text = Instance.new("TextLabel", billboard)
								text.Size = UDim2.new(1,0,1,0)
								text.BackgroundTransparency = 1
								text.Text = v.Name
								text.TextColor3 = Color3.new(1,1,1)
								text.TextStrokeTransparency = 0.5
								text.Font = Enum.Font.SourceSansBold
								text.TextScaled = true
							end
							nameTag = v.Character:FindFirstChild("ESP_Tag")
							if nameTag and nameTag:FindFirstChildOfClass("TextLabel") then
								nameTag.TextLabel.TextColor3 = RainbowColor(i*0.5)
							end
						end
					end
				end
			end
		end)
	else
		for _,v in pairs(Players:GetPlayers()) do
			if v.Character then
				if v.Character:FindFirstChild("ESP_Highlight") then
					v.Character.ESP_Highlight:Destroy()
				end
				if v.Character:FindFirstChild("ESP_Tag") then
					v.Character.ESP_Tag:Destroy()
				end
			end
		end
	end
end)
